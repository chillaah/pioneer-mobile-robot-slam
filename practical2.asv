%% EGB439 Practical 2

function [lWv, rWv] = practical2(V, W)

    desiredLinearVel = V;
    desiredAngularVel = W;
    
    circleRadius = 1; % length from center to middle of axle (radius)
    linearDistance = 2*pi*circleRadius;
    timeLinear = linearDistance / desiredLinearVel;
    robotAxleLength = 0.331;
    
    RL = circleRadius - robotAxleLength/2; % radius from center to left wheel
    RR = circleRadius + robotAxleLength/2; % radius from center to right wheel
    radiusWheel = 0.0975;
    
    % number of rotations by each wheel
    numRotLeft = RL / radiusWheel;
    numRotRight = RR / radiusWheel;
    
    % velocity of each wheel in degrees per second
    degPerSecLeft = (numRotLeft * 360)/timeLinear;
    degPerSecRight = (numRotRight * 360)/timeLinear;
    
    % velocity in radians per second
    lWv = degPerSecLeft * pi/180;
    rWv = degPerSecRight * pi/180;

 
    
    
    CL = 2 * pi * radiusWheel; % circumference of left wheel
    CR = 2 * pi * radiusWheel; % circumference of right wheel
    
    ROTL = 2 * pi * RL / CL; % number of rotations by left wheel
    ROTR = 2 * pi * RR / CR;
    % number of rotations by right wheel
    
    T = 15; % time to complete
    
    DPSL = (ROTL * 360) / T; % degrees per second of left wheel
    DPSR = (ROTR * 360) / T; % degrees per second of right wheel
    
    ANGVELL = DPSL * pi/180; % radians per second of left wheel
    ANGVELR = DPSR * pi/180; % radians per second of right wheel
    
    robot.setMotorVel(ANGVELL, ANGVELR) % move robot anti-clockwise
    
    LINVELL = RL * ANGVELL; % meters per second of left wheel
    LINVELR = RR * ANGVELR; % meters per second of right wheel
    
    ANGVEL = norm([ANGVELL ANGVELR]); % total angular velocity
    LINVEL = norm([LINVELL LINVELR]); % total linear velocity
end
